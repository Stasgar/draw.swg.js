<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Document</title>
    <script
  src="https://code.jquery.com/jquery-3.1.1.min.js"
  integrity="sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8="
  crossorigin="anonymous"></script>
  <script src="../src/draw.svg.js"></script>
  <script src="js/jscolor.min.js"></script>
  <link rel="stylesheet" type="text/css" href="css/style.css">
</head>
<body>
<div id="image-box">
    <svg id="svg-area">
    </svg>

    <div id="currentScreenshot">
        
    </div>
</div>

<div class="form">
    <form id="select-item">
        Color: <input class="jscolor" value="29AB22" name="strokeColor"> <br>
        <input type="radio" value="square" name="item" checked>Square <img class="brush-preview" src="images/square.jpg"><br>
        <input type="radio" value="arrow" name="item">Arrow <img class="brush-preview" src="images/arrow.jpg"><br>
        <input type="radio" value="line" name="item">Line <img class="brush-preview" src="images/line.jpg"><br>
        <input type="radio" value="ellipse" name="item">Ellipse <img class="brush-preview" src="images/ellipse.jpg"><br>
        <input type="radio" value="eraser" name="item">Eraser <img class="brush-preview" src="images/eraser.jpg"><br>
    </form>
    
</div>
        
    
</body>

<script>
/*
    Ui interaction code
*/
var selectedItem = $('input[name=item]:checked', '#select-item').val();
var strokeColor = $('input[name=strokeColor]', '#select-item').val();

$('#select-item').change(function(){
    selectedItem = $('input[name=item]:checked', '#select-item').val();
    strokeColor = $('input[name=strokeColor]', '#select-item').val();
    console.log ($('input[name=item]:checked', '#select-item').val());
});
    
</script>

<script>
/*
    Mouse events combined with draw.svg.js functions
*/
    var isDrawing = false;
    drawSVG.init('svg-area');  

    
    $('#svg-area').mousemove(function(e){

        if(isDrawing)
        {
            var curPos = drawSVG.getCurPos(e);
                lX = curPos.x;
                lY = curPos.y;

            drawSVG.drawByString(selectedItem, itemId, fX, fY, lX, lY);
            /*
                //The drawByString() is equivalent to this:

            switch(selectedItem)
            {
                case "square": drawSVG.drawSquare(itemId,fX, fY, lX, lY)
                    break;
                case "arrow": drawSVG.drawArrow(itemId,fX, fY, lX, lY)
                    break;
                case "line": drawSVG.drawLine(itemId, lX, lY)
                    break;
                case "ellipse": drawSVG.drawEllipse(itemId, fX, fY, lX, lY)
            }
            */
        }

        //Show coordinates in demo:
        str = 'X:'+drawSVG.getCurPos(e).x+'  Y:'+drawSVG.getCurPos(e).y;
        $('#current-pos').html(str);
    })
    .mousedown(function(e){
        isDrawing = true;

        var curPos = drawSVG.getCurPos(e);
            fX = curPos.x;
            fY = curPos.y;

        itemId = (+ new Date()).toString(); // generate random unique id for figure

        drawSVG.strokeWidth = '4px';
        drawSVG.strokeColor = '#'+strokeColor;
        
        if(selectedItem != 'eraser')
            drawSVG.createByString(selectedItem, itemId);
        else
            drawSVG.deleteObject(e.target.id);
        
        /*
            //The createByString() is equivalent to this:
            
            switch(selectedItem)
            {
                case "square": drawSVG.createPath(itemId);
                    break;
                case "arrow": drawSVG.createPath(itemId);
                    break;
                case "line": drawSVG.createPath(itemId);
                    break;
                case "ellipse": drawSVG.createEllipse(itemId);
                    break;
                case "eraser": drawSVG.deleteObject(e.target.id);
            }
        */

    })
    .mouseup(function(e) {
        isDrawing = false;

    });

</script>
</html>
